{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { stringify } from 'querystring';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: ``\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  minhaPromise(nome: string):Promise<string>{\r\n    return new Promise((resolve, reject) => {\r\n      if(nome ==='Eduardo') {\r\n        setTimeout(() => {\r\n          resolve('Seja bem vindo ' + nome)\r\n        }, 5000);\r\n      }\r\n      else {\r\n        reject('Ops! Você não é o Eduardo')\r\n      }\r\n    })\r\n  }\r\n\r\n  minhaObservable(nome: string):Observable<string> {\r\n    return new Observable(\r\n      subscriber => {\r\n\r\n        if(nome === 'Eduardo') {\r\n          subscriber.next('Olá ' + nome);\r\n          subscriber.next('Olá de novo '  + nome);\r\n          setTimeout(() => {\r\n            subscriber.next('Resposta com delay '  + nome);\r\n          }, 5000);\r\n          subscriber.complete();\r\n        }\r\n        else {\r\n          subscriber.error('Ops! Deu erro!');\r\n        }\r\n    });\r\n  }\r\n\r\n  usuarioObservable(nome: string, email: string):Observable<Usuario> {\r\n    return new Observable(subscriber => {\r\n        if(nome === 'Admin') {\r\n         let usuario = new Usuario(nome, email);\r\n\r\n          setTimeout(() => {\r\n            subscriber.next(usuario);\r\n          }, 1000);\r\n\r\n          setTimeout(() => {\r\n            subscriber.next(usuario);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            subscriber.next(usuario);\r\n          }, 3000);\r\n\r\n          setTimeout(() => {\r\n            subscriber.next(usuario);\r\n          }, 4000);\r\n\r\n          setTimeout(() => {\r\n            subscriber.next(usuario);\r\n          }, 5000);\r\n        }\r\n        else {\r\n          subscriber.error('Ops! Deu erro!');\r\n        }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    // this.minhaPromise('Eduardo')\r\n    // .then(result => { \r\n    //     console.log(result)\r\n    //   })\r\n    // .catch(error => {\r\n    //   console.log(error);\r\n    // });\r\n\r\n    // this.minhaObservable('Eduardo')\r\n    // .subscribe(\r\n    //   result => console.log(result),\r\n    //   erro => console.log(erro)),\r\n    //   () => console.log('FIM!');\r\n\r\n    const observer = {\r\n      next: valor => console.log('Next: ' + valor),\r\n      error: erro => console.log('Error:' + erro),\r\n      complete: () => console.log('Fim!')\r\n    }\r\n\r\n    // const obs = this.minhaObservable('Eduardo');\r\n    // obs.subscribe(observer);\r\n\r\n     const obs = this.usuarioObservable('Admin', 'admin@admin.com');\r\n     const subs = obs.subscribe(observer);\r\n\r\n     setTimeout(() =>{\r\n       subs.unsubscribe();\r\n       console.log('Conexão fechada: ' + subs.closed)\r\n     }, 35000);\r\n  }\r\n\r\n  escrever(texto: string) {\r\n    console.log(texto)\r\n  }\r\n}\r\n\r\nexport class Usuario {\r\n  constructor(nome: string, email: string) {\r\n    this.nome = nome;\r\n    this.email = email;\r\n  }\r\n\r\n    nome: string;\r\n    email: string;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}